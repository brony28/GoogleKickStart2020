#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds;   
#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 
#define ld long double
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end()
#define sz(a) (ll)(a.size())
const int M = 1e4+4;
int a[M],dp[M][4];
int main()
{
	ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
	int test;
	cin>>test;
	for(int tt=1;tt<=test;tt++)
	{
		cout<<"Case #"<<tt<<": ";
		int n;
		cin>>n;
		for(int i=1;i<=n;i++)
			cin>>a[i];
		for(int i=2;i<=n;i++)
		{
			for(int j=0;j<4;j++)
			{
				dp[i][j] = 1e9;
				for(int k=0;k<4;k++)
				{
					if(a[i-1]>a[i])
					{
						if(k>j)
							dp[i][j] = min(dp[i][j],dp[i-1][k]);
						else
							dp[i][j] = min(dp[i][j],dp[i-1][k]+1);
					}
					if(a[i-1]<a[i])
					{
						if(k<j)
							dp[i][j] = min(dp[i][j],dp[i-1][k]);
						else
							dp[i][j] = min(dp[i][j], dp[i-1][k]+1);
					}
					if(a[i-1]==a[i])
					{
						if(k==j)
							dp[i][j] = min(dp[i][j],dp[i-1][k]);
						else
							dp[i][j] = min(dp[i][j], dp[i-1][k]+1);
					}
				}
			}
		}
		int ans = 1e9;
		for(int j=0;j<4;j++)
			ans = min(ans, dp[n][j]);
		cout<<ans<<"\n";
	}
	return 0;
}