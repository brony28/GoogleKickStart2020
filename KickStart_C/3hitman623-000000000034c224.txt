#include <bits/stdc++.h>

#define int         long long
#define pb          push_back
#define pii         pair<int,int>
#define vi          vector<int>
#define vii         vector<pii>
#define mi          map<int,int>
#define mii         map<pii,int>
#define all(a)      (a).begin(),(a).end()
#define x           first
#define y           second
#define sz(x)       (int)x.size()
#define endl        '\n'
#define hell        1000000007
#define rep(i,a,b)  for(int i=a;i<b;i++)
using namespace std;
int n,q,a[200005];
pii seg[800005][2];
void build(int node,int start,int end){
    if(start==end){
        seg[node][start%2]={a[start],a[start]*start};
        seg[node][1-start%2]={0,0};
        return;
    }
    int mid=(start+end)>>1;
    build(node<<1,start,mid);
    build(node<<1|1,mid+1,end);
    seg[node][0].x=seg[node<<1][0].x+seg[node<<1|1][0].x;
    seg[node][0].y=seg[node<<1][0].y+seg[node<<1|1][0].y;
    seg[node][1].x=seg[node<<1][1].x+seg[node<<1|1][1].x;
    seg[node][1].y=seg[node<<1][1].y+seg[node<<1|1][1].y;
}
pii query(int f,int node,int start,int end,int l,int r){
    if(l<=start && r>=end) return seg[node][f];
    if(r<start || l>end) return {0,0};
    int mid=(start+end)>>1;
    pii ans1=query(f,node<<1,start,mid,l,r);
    pii ans2=query(f,node<<1|1,mid+1,end,l,r);
    return {ans1.x+ans2.x,ans1.y+ans2.y};
}
void update(int node,int start,int end,int x,int val){
    if(start==end){
        a[x]=val;
        seg[node][start%2]={a[start],a[start]*start};
        return;
    }
    int mid=(start+end)>>1;
    if(start<=x && x<=mid) update(node<<1,start,mid,x,val);
    else update(node<<1|1,mid+1,end,x,val);
    seg[node][0].x=seg[node<<1][0].x+seg[node<<1|1][0].x;
    seg[node][0].y=seg[node<<1][0].y+seg[node<<1|1][0].y;
    seg[node][1].x=seg[node<<1][1].x+seg[node<<1|1][1].x;
    seg[node][1].y=seg[node<<1][1].y+seg[node<<1|1][1].y;
}
void solve(){
    cin>>n>>q;
    rep(i,1,n+1) cin>>a[i];
    build(1,1,n);
    int ans=0;
    while(q--){
        char ch;
        cin>>ch;
        if(ch=='Q'){
            int l,r;
            cin>>l>>r;
            pii A=query(l%2,1,1,n,l,r);
            pii B=query((l%2)^1,1,1,n,l,r);
            int sa=A.y-(l-1)*A.x;
            int sb=B.y-(l-1)*B.x;
            ans+=sa-sb;
        }
        else{
            int x,y;
            cin>>x>>y;
            update(1,1,n,x,y);
        }
    }
    cout<<ans<<endl;
}

signed main(){
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t=1;
    cin>>t;
    rep(i,1,t+1){
        cout<<"Case #"<<i<<": ";
        solve();
    }
    return 0;
}